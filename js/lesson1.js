// for (let i = 0; i <= 5; i += 1) {
//   console.log(i);

//   if (i === 3) {
//     console.log("–ù–∞—à–ª–∏ —á–∏—Å–ª–æ 3, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–∏–∫–ª–∞");
//     break;
//   }
// }

// console.log("–õ–æ–≥ –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞");

//
// const namber = 10;

// for (let i = 0; i < namber; i += 1) {
//   if (i % 2 === 0) {
//     continue;
//   }

//   console.log("–ù–µ—á–µ—Ç–Ω–æ–µ i: ", i); // 1, 3, 5, 7, 9
// }
//

// const newArray = {
//   family: ["Nikita", "Natasha", "Valera", "ergdffbfb"],
//   flatNumber: 3,
//   rooms: ["bathroom, kitchen, badroom"],

//   addName(newName) {
//     this.family.push(newName);
//     this.flatNumber = this.family.length;
//   },

//   // changeNumber(newNumber) {
//   //   this.flatNumber = newNumber;
//   // },
// };

// newArray.addName("Douther");

// // newArray.changeNumber(23);

// console.log(newArray);

const feedback = {
  good: 5,
  neutral: 4,
  bad: 3,
};

let totalFeedback = 0;

// const keys = Object.keys(feedback);

// console.log(keys);

// for (const key of keys) {
//   console.log(feedback[key]);

//   totalFeedback += feedback[key];
// }

// console.log("–ò—Ç–æ–≥–æ:", totalFeedback);

const values = Object.values(feedback);
// console.log(values);

// for (const value of values) {
//   // console.log(value);

//   totalFeedback += value;
// }
// console.log("–∏—Ç–æ–≥–æ:", totalFeedback);

/*
 * –†–∞–±–æ—Ç–∞ —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π (–º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤)
 */
const friends = [
  { name: "Mango", online: false },
  { name: "Kiwi", online: true },
  { name: "Poly", online: true },
  { name: "Ajax", online: false },
];

// console.table(friends);

// for (const friend of friends) {
//   console.log(friend);

//   friend.newprop = 555;
// }

// console.table(friends);

const findFriendByName = function (allFriends, name) {
  //   for (const friend of allFriends) {
  //     console.log(friend);
  //     console.log(friend.name === name);
  //     if (friend.name === name) {
  //       return "–ù–∞—à–ª–∏!!!";
  //     }
  //   }
};

// console.log(findFriendByName(friends, "Poly"));

const getAllNames = function (allFriends) {
  const allNamesArray = [];
  for (const friend of allFriends) {
    console.log(friend.name);
    allNamesArray.push(friend.name);
  }
  return allNamesArray;
  // console.log(allNamesArray);
};

// console.log(getAllNames(friends));

const getOnlineFriends = function (allFriends) {
  const friendsStatusArray = [];
  for (const friend of allFriends) {
    // console.log(friend.online);
    if (!friend.online) {
      friendsStatusArray.push(friend);
    }
  }
  return friendsStatusArray;
};

// console.log(getOnlineFriends(friends));

/*
 * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:
 * - getItems()
 * - add(product)
 * - remove(productName)
 * - clear()
 * - countTotalPrice()
 * - increaseQuantity(productName)
 * - decreaseQuantity(productName)
 *
 * { name: 'üçé', price: 50 }
 * { name: 'üçá', price: 70 }
 * { name: 'üçã', price: 60 }
 * { name: 'üçì', price: 110 }
 */

const cart = {
  items: [],
  getItems() {},
  add(product) {},
  remove(productName) {},
  clear() {},
  countTotalPrice() {},
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};

// console.table(cart.getItems());

cart.add({ name: "üçé", price: 50 });
cart.add({ name: "üçã", price: 60 });
cart.add({ name: "üçã", price: 60 });
cart.add({ name: "üçì", price: 110 });

// console.table(cart.getItems());

cart.remove("üçé");
// console.table(cart.getItems());

// cart.clear();
// console.table(cart.getItems());

// cart.increaseQuantity('üçé');
// console.table(cart.getItems());

// cart.decreaseQuantity('üçã');
// cart.decreaseQuantity('üçã');
// console.table(cart.getItems());

// console.log('Total: ', cart.countTotalPrice());

// let balance = 10000;
// const payment = 20000;

// console.log(
//   `–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ ${payment} –∫—Ä–µ–¥–∏—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É...`
// );

// if (payment <= balance) {
//   console.log(`–í—Å–µ —Ö–æ—Ä–æ—à–æ! –°–Ω–∏–º–∞–µ–º –¥–µ–Ω—å–≥–∏...`);
//   balance -= payment;
//   console.log(`–ù–∞ —Å—á–µ—Ç—É –æ—Å—Ç–∞–ª–æ—Å—å ${balance} –∫—Ä–µ–¥–∏—Ç–æ–≤.`);
// } else console.log("–ù–∞ —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏!");
// console.log("–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");

// let password = "";

// do {
//   password = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª–∏–Ω–Ω–µ–µ 4-—Ö —Å–∏–º–≤–æ–ª–æ–≤", "");
// } while (password.length < 5);

// console.log("–í–≤–µ–ª–∏ –ø–∞—Ä–æ–ª—å: ", password);

// const max = 10;
// for (let i = 0; i < max; i += 1) {
//   console.log(`${max} % ${i} = `, max % i);
// }

// –í—ã–Ω–æ—Å–∏–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤
// const redFruits = ["apple", "strawberry", "cherry", "cranberries"];
// const fruit = "cherry";
// // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
// const hasFruit = redFruits.includes(fruit);

// if (hasFruit) {
//   console.log(`${fruit} is a red fruit!`);
// } else {
//   console.log(`${fruit} is a —Å—É–∫–∞ fruit!`);
// }

//lesson 4

// // 1. –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ x, y, z
// function multiply(x, y, z) {
//   console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω ${x * y * z}`);
// }

// // 2. –ü–µ—Ä–µ–¥–∞—á–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// multiply(2, 3, 5); // –†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω 30
// multiply(4, 8, 12); // –†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω 384
// multiply(17, 6, 25); // –†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω 2550

// function count(countFrom = 0, countTo = 10, step = 1) {
//   console.log(`countFrom = ${countFrom}, countTo = ${countTo}, step = ${step}`);

//   for (let i = countFrom; i <= countTo; i += step) {
//     console.log(i);
//   }
// }

// count(1, 5); // countFrom = 1, countTo = 5, step = 1
// count(2); // countFrom = 2, countTo = 10, step = 1
// count(); // countFrom = 0, countTo = 10, step = 1

// function fnA() {
//   console.log("–õ–æ–≥ –≤–Ω—É—Ä—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnA –¥–æ –≤—ã–∑–æ–≤–∞ fnB");
//   fnB();
//   console.log("–õ–æ–≥ –≤–Ω—É—Ä—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnA –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ fnB");
// }

// function fnB() {
//   console.log("–õ–æ–≥ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnB");
// }

// console.log("–õ–æ–≥ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º fnA");
// fnA();
// console.log("–õ–æ–≥ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ fnA");

// // "–õ–æ–≥ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º fnA"
// // "–õ–æ–≥ –≤–Ω—É—Ä—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnA –¥–æ –≤—ã–∑–æ–≤–∞ fnB"
// // "–õ–æ–≥ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnB"
// // "–õ–æ–≥ –≤–Ω—É—Ä—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fnA –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ fnB"
// // "–õ–æ–≥ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ fnA"

// function bar() {
//   console.log("bar");
// }

// function baz() {
//   console.log("baz");
// }

// function foo() {
//   console.log("foo");
//   bar();
//   baz();
// }

// foo();

// function countProps(object) {
//   let propCount = 0;
//   // Change code below this line
//   for (const key in object) {
//     if (object.hasOwnProperty(key)) {
//       propCount = key.length;
//     }
//   }
//   // Change code above this line
//   return propCount;
// }

const products = [
  { name: "Radar", price: 1300, quantity: 4 },
  { name: "Scanner", price: 2700, quantity: 3 },
  { name: "Droid", price: 400, quantity: 7 },
  { name: "Grip", price: 1200, quantity: 9 },
];

function getProductPrice(productName) {
  // Change code below this line
  const priceOfProduct = null;
  for (const product of products) {
    if ((product.name = productName)) priceOfproduct = product.price;
  }

  return priceOfProduct;
  // Change code above this line
}

// console.log(priceOfProduct);

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getProductPrice(productName) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω
// –ø–∞—Ä–∞–º–µ—Ç—Ä productName - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞. –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç –æ–±—ä–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞
// —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º (—Å–≤–æ–π—Å—Ç–≤–æ name) –≤ –º–∞—Å—Å–∏–≤–µ products –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ
// —Ü–µ–Ω—É (—Å–≤–æ–π—Å—Ç–≤–æ price). –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω,
// —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å null.

// const bookShelf = {
//   books: ["–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ"],
//   getBooks() {
//     return this.books;
//   },
//   addBook(bookName) {
//     this.books.push(bookName);
//   },
//   removeBook(bookName) {
//     const bookIndex = this.books.indexOf(bookName);
//     this.books.splice(bookIndex, 1);
//   },
// };

// console.log(bookShelf.getBooks()); // []
// bookShelf.addBook("–ú–≥–ª–∞");
// bookShelf.addBook("–°—Ç—Ä–∞–∂ —Å–Ω–æ–≤");
// console.log(bookShelf.getBooks()); // ["–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", "–ú–≥–ª–∞", "–°—Ç—Ä–∞–∂ —Å–Ω–æ–≤"]
// bookShelf.removeBook("–ú–≥–ª–∞");
// console.log(bookShelf.getBooks());

// const numbers = [5, 10, 15, 20, 25];

// const logMessage = (number, index) => {
//   console.log(`–ò–Ω–¥–µ–∫—Å ${index}, –∑–Ω–∞—á–µ–Ω–∏–µ ${number}`);
// };

// numbers.forEach(logMessage);

// –ö–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è
// function greet(name) {
//   console.log(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${name}.`);
// }

// // –§—É–Ω–∫—Ü–∏—è –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞
// function registerGuest(name, callback) {
//   console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Å—Ç—è ${name}.`);
//   callback(name);
// }

// registerGuest("–ú–∞–Ω–≥–æ", greet);

// const students = [
//   { name: "–ú–∞–Ω–≥–æ", courses: ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ–∏–∑–∏–∫–∞"] },
//   { name: "–ü–æ–ª–∏", courses: ["–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"] },
//   { name: "–ö–∏–≤–∏", courses: ["—Ñ–∏–∑–∏–∫–∞", "–±–∏–æ–ª–æ–≥–∏—è"] },
// ];

// const allCourses = students.flatMap((student) => student.courses);
// // ['–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞', '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞', '–±–∏–æ–ª–æ–≥–∏—è'];
// const uniqueCourses = allCourses.filter(
//   (course, index, array) => array.indexOf(course) === index
// );

// console.log(uniqueCourses);

// // –ö–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è
// –ï—Å–ª–∏ –∫–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è –º–∞–ª–µ–Ω—å–∫–∞—è –∏ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º, –µ—ë –º–æ–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –ø—Ä—è–º–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–¥–∞—ë–º –∫–æ–ª–±—ç–∫. –¢–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏ –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ –≤ –∫–æ–¥–µ.

// function registerGuest(name, callback) {
//   console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Å—Ç—è ${name}.`);
//   callback(name);
// }

// // –ü–µ—Ä–µ–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü–∏—é greet –∫–∞–∫ –∫–æ–ª–±—ç–∫
// registerGuest("–ú–∞–Ω–≥–æ", function greet(name) {
//   consle.log(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${name}.`);
// });

// // –ü–µ—Ä–µ–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü–∏—é notify –∫–∞–∫ –∫–æ–ª–±—ç–∫
// registerGuest("–ü–æ–ª–∏", function notify(name) {
//   consle.log(`–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) ${name}, –≤–∞—à –Ω–æ–º–µ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç.`);
// });
// function greet(name) {
//   console.log(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${name}.`);
// }

// // –§—É–Ω–∫—Ü–∏—è –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞
// function registerGuest(name, callback) {
//   console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Å—Ç—è ${name}.`);
//   callback(name);
// }
// registerGuest("–ú–∞–Ω–≥–æ", greet);

// function registerGuest(name, callback) {
//   console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Å—Ç—è ${name}.`);
//   callback(name);
// }

// // –ü–µ—Ä–µ–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü–∏—é greet –∫–∞–∫ –∫–æ–ª–±—ç–∫
// registerGuest("–ú–∞–Ω–≥–æ", function greet(name) {
//   console.log(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${name}.`);
// });

// // –ü–µ—Ä–µ–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü–∏—é notify –∫–∞–∫ –∫–æ–ª–±—ç–∫
// registerGuest("–ü–æ–ª–∏", function notify(name) {
//   console.log(`–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) ${name}, –≤–∞—à –Ω–æ–º–µ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç.`);
// });
// const numbers = [5, 10, 15, 20, 25];

// // –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for
// for (let i = 0; i < numbers.length; i += 1) {
//   console.log(`–ò–Ω–¥–µ–∫—Å ${i}, –∑–Ω–∞—á–µ–Ω–∏–µ ${numbers[i]}`);
// }

// –ü–µ—Ä–µ–±–∏—Ä–∞—é—â–∏–π forEach
// numbers.forEach(function (number, index) {
//   console.log(`–ò–Ω–¥–µ–∫—Å ${index}, –∑–Ω–∞—á–µ–Ω–∏–µ ${number}`);
// });

// const numbers = [5, 10, 15, 20, 25];

// const logMessage = (number, index) => {
//   console.log(`–ò–Ω–¥–µ–∫—Å ${index}, –∑–Ω–∞—á–µ–Ω–∏–µ ${number}`);
// };

// numbers.forEach(logMessage);

// const getFriends = (users) => {
//   const allFriends = users.flatMap((user) => user.friends);
// };

// const books = [
//   { title: "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", author: "–ë–µ—Ä–Ω–∞—Ä–¥ –ö–æ—Ä–Ω—É—ç–ª–ª", rating: 8.38 },
//   { title: "–ù–∞ –±–µ—Ä–µ–≥—É —Å–ø–æ–∫–æ–π–Ω—ã—Ö –≤–æ–¥", author: "–†–æ–±–µ—Ä—Ç –®–µ–∫–ª–∏", rating: 8.51 },
//   { title: "–°–æ–Ω —Å–º–µ—à–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞", author: "–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", rating: 7.75 },
//   { title: "–ö—Ä–∞—Å–Ω–∞ –∫–∞–∫ –∫—Ä–æ–≤—å", author: "–õ–∏ –¢–∞–Ω–∏—Ç", rating: 8.14 },
//   { title: "–°–Ω—ã –í –í–µ–¥—å–º–∏–Ω–æ–º –î–æ–º–µ", author: "–ì–æ–≤–∞—Ä–¥ –õ–∞–≤–∫—Ä–∞—Ñ—Ç", rating: 8.67 },
// ];
// const MIN_BOOK_RATING = 8;
// // –ü–∏—à–∏ –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏

// const names = [...books]
//   .sort((a, b) => a.author.localeCompare(b.author))
//   .filter((book) => book.rating > MIN_BOOK_RATING)
//   .map((rat) => rat.author);
// console.table(names);

// const numbers = [5, 10, 15, 20, 25];

// // –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for
// for (let i = 0; i < numbers.length; i += 1) {
//   console.log(`–ò–Ω–¥–µ–∫—Å ${i}, –∑–Ω–∞—á–µ–Ω–∏–µ ${numbers[i]}`);
// }

// // –ü–µ—Ä–µ–±–∏—Ä–∞—é—â–∏–π forEach
// numbers.forEach(function (number) {
//   console.log(`–∑–Ω–∞—á–µ–Ω–∏–µ ${number}`);
// });
